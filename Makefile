#############################################################################
# Makefile for building: ../debug.win32/Vladiremote_v1
# Generated by qmake (2.01a) (Qt 4.6.2) on: ven. oct. 28 10:36:56 2011
# Project:  Vladiremote_v1.pro
# Template: app
# Command: /usr/bin/qmake-qt4 -spec /usr/share/qt4/mkspecs/linux-g++ -unix CONFIG+=debug CONFIG+=CLINUX -o Makefile Vladiremote_v1.pro
#############################################################################

####### Compiler, tools and options

CC            = gcc
CXX           = g++
DEFINES       = -DCLINUX -DQT_XML_LIB -DQT_GUI_LIB -DQT_NETWORK_LIB -DQT_CORE_LIB -DQT_SHARED
CFLAGS        = -pipe -g -Wall -W -D_REENTRANT $(DEFINES)
CXXFLAGS      = -pipe -g -Wall -W -D_REENTRANT $(DEFINES)
INCPATH       = -I/usr/share/qt4/mkspecs/linux-g++ -I. -I/usr/include/qt4/QtCore -I/usr/include/qt4/QtNetwork -I/usr/include/qt4/QtGui -I/usr/include/qt4/QtXml -I/usr/include/qt4 -I. -I.
LINK          = g++
LFLAGS        = 
LIBS          = $(SUBLIBS)  -L/usr/lib -lQtXml -lQtGui -lQtNetwork -lQtCore -lpthread 
AR            = ar cqs
RANLIB        = 
QMAKE         = /usr/bin/qmake-qt4
TAR           = tar -cf
COMPRESS      = gzip -9f
COPY          = cp -f
SED           = sed
COPY_FILE     = $(COPY)
COPY_DIR      = $(COPY) -r
STRIP         = strip
INSTALL_FILE  = install -m 644 -p
INSTALL_DIR   = $(COPY_DIR)
INSTALL_PROGRAM = install -m 755 -p
DEL_FILE      = rm -f
SYMLINK       = ln -f -s
DEL_DIR       = rmdir
MOVE          = mv -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p

####### Output directory

OBJECTS_DIR   = ./

####### Files

SOURCES       = about.cpp \
		cryptage.cpp \
		FenPrincipale.cpp \
		FenPrincipale_autre.cpp \
		FenPrincipale_configuration.cpp \
		FenPrincipale_settings.cpp \
		FenPrincipale_systray.cpp \
		main.cpp \
		process.cpp \
		putty.cpp \
		receiver.cpp \
		sender.cpp \
		udpsocket.cpp \
		wol.cpp \
		server.cpp \
		configuration.cpp \
		ping.cpp moc_about.cpp \
		moc_FenPrincipale.cpp \
		moc_process.cpp \
		moc_putty.cpp \
		moc_receiver.cpp \
		moc_sender.cpp \
		moc_udpsocket.cpp \
		moc_server.cpp \
		moc_ping.cpp \
		qrc_ressources.cpp
OBJECTS       = about.o \
		cryptage.o \
		FenPrincipale.o \
		FenPrincipale_autre.o \
		FenPrincipale_configuration.o \
		FenPrincipale_settings.o \
		FenPrincipale_systray.o \
		main.o \
		process.o \
		putty.o \
		receiver.o \
		sender.o \
		udpsocket.o \
		wol.o \
		server.o \
		configuration.o \
		ping.o \
		moc_about.o \
		moc_FenPrincipale.o \
		moc_process.o \
		moc_putty.o \
		moc_receiver.o \
		moc_sender.o \
		moc_udpsocket.o \
		moc_server.o \
		moc_ping.o \
		qrc_ressources.o
DIST          = /usr/share/qt4/mkspecs/common/g++.conf \
		/usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/debug.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/share/qt4/mkspecs/features/include_source_dir.prf \
		Vladiremote_v1.pro
QMAKE_TARGET  = Vladiremote_v1
DESTDIR       = ../debug.win32/
TARGET        = ../debug.win32/Vladiremote_v1

first: all
####### Implicit rules

.SUFFIXES: .o .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o "$@" "$<"

####### Build rules

all: Makefile $(TARGET)

$(TARGET): ui_about.h ui_FenPrincipale.h $(OBJECTS)  
	@$(CHK_DIR_EXISTS) ../debug.win32/ || $(MKDIR) ../debug.win32/ 
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJCOMP) $(LIBS)

Makefile: Vladiremote_v1.pro  /usr/share/qt4/mkspecs/linux-g++/qmake.conf /usr/share/qt4/mkspecs/common/g++.conf \
		/usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/debug.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/share/qt4/mkspecs/features/include_source_dir.prf \
		/usr/lib/libQtXml.prl \
		/usr/lib/libQtGui.prl \
		/usr/lib/libQtNetwork.prl \
		/usr/lib/libQtCore.prl
	$(QMAKE) -spec /usr/share/qt4/mkspecs/linux-g++ -unix CONFIG+=debug CONFIG+=CLINUX -o Makefile Vladiremote_v1.pro
/usr/share/qt4/mkspecs/common/g++.conf:
/usr/share/qt4/mkspecs/common/unix.conf:
/usr/share/qt4/mkspecs/common/linux.conf:
/usr/share/qt4/mkspecs/qconfig.pri:
/usr/share/qt4/mkspecs/features/qt_functions.prf:
/usr/share/qt4/mkspecs/features/qt_config.prf:
/usr/share/qt4/mkspecs/features/exclusive_builds.prf:
/usr/share/qt4/mkspecs/features/default_pre.prf:
/usr/share/qt4/mkspecs/features/debug.prf:
/usr/share/qt4/mkspecs/features/default_post.prf:
/usr/share/qt4/mkspecs/features/warn_on.prf:
/usr/share/qt4/mkspecs/features/qt.prf:
/usr/share/qt4/mkspecs/features/unix/thread.prf:
/usr/share/qt4/mkspecs/features/moc.prf:
/usr/share/qt4/mkspecs/features/resources.prf:
/usr/share/qt4/mkspecs/features/uic.prf:
/usr/share/qt4/mkspecs/features/yacc.prf:
/usr/share/qt4/mkspecs/features/lex.prf:
/usr/share/qt4/mkspecs/features/include_source_dir.prf:
/usr/lib/libQtXml.prl:
/usr/lib/libQtGui.prl:
/usr/lib/libQtNetwork.prl:
/usr/lib/libQtCore.prl:
qmake:  FORCE
	@$(QMAKE) -spec /usr/share/qt4/mkspecs/linux-g++ -unix CONFIG+=debug CONFIG+=CLINUX -o Makefile Vladiremote_v1.pro

dist: 
	@$(CHK_DIR_EXISTS) .tmp/Vladiremote_v11.0.0 || $(MKDIR) .tmp/Vladiremote_v11.0.0 
	$(COPY_FILE) --parents $(SOURCES) $(DIST) .tmp/Vladiremote_v11.0.0/ && $(COPY_FILE) --parents about.h cryptage.h FenPrincipale.h process.h putty.h receiver.h sender.h udpsocket.h wol.h server.h configuration.h ping.h .tmp/Vladiremote_v11.0.0/ && $(COPY_FILE) --parents ressources.qrc .tmp/Vladiremote_v11.0.0/ && $(COPY_FILE) --parents about.cpp cryptage.cpp FenPrincipale.cpp FenPrincipale_autre.cpp FenPrincipale_configuration.cpp FenPrincipale_settings.cpp FenPrincipale_systray.cpp main.cpp process.cpp putty.cpp receiver.cpp sender.cpp udpsocket.cpp wol.cpp server.cpp configuration.cpp ping.cpp .tmp/Vladiremote_v11.0.0/ && $(COPY_FILE) --parents about.ui FenPrincipale.ui .tmp/Vladiremote_v11.0.0/ && $(COPY_FILE) --parents vladiconnect_en.ts vladiconnect_fr.ts .tmp/Vladiremote_v11.0.0/ && (cd `dirname .tmp/Vladiremote_v11.0.0` && $(TAR) Vladiremote_v11.0.0.tar Vladiremote_v11.0.0 && $(COMPRESS) Vladiremote_v11.0.0.tar) && $(MOVE) `dirname .tmp/Vladiremote_v11.0.0`/Vladiremote_v11.0.0.tar.gz . && $(DEL_FILE) -r .tmp/Vladiremote_v11.0.0


clean:compiler_clean 
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) 
	-$(DEL_FILE) Makefile


mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

compiler_moc_header_make_all: moc_about.cpp moc_FenPrincipale.cpp moc_process.cpp moc_putty.cpp moc_receiver.cpp moc_sender.cpp moc_udpsocket.cpp moc_server.cpp moc_ping.cpp
compiler_moc_header_clean:
	-$(DEL_FILE) moc_about.cpp moc_FenPrincipale.cpp moc_process.cpp moc_putty.cpp moc_receiver.cpp moc_sender.cpp moc_udpsocket.cpp moc_server.cpp moc_ping.cpp
moc_about.cpp: ui_about.h \
		about.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) about.h -o moc_about.cpp

moc_FenPrincipale.cpp: ui_FenPrincipale.h \
		cryptage.h \
		about.h \
		ui_about.h \
		receiver.h \
		udpsocket.h \
		sender.h \
		process.h \
		server.h \
		ping.h \
		wol.h \
		putty.h \
		FenPrincipale.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) FenPrincipale.h -o moc_FenPrincipale.cpp

moc_process.cpp: process.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) process.h -o moc_process.cpp

moc_putty.cpp: process.h \
		putty.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) putty.h -o moc_putty.cpp

moc_receiver.cpp: udpsocket.h \
		receiver.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) receiver.h -o moc_receiver.cpp

moc_sender.cpp: udpsocket.h \
		sender.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) sender.h -o moc_sender.cpp

moc_udpsocket.cpp: udpsocket.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) udpsocket.h -o moc_udpsocket.cpp

moc_server.cpp: ping.h \
		wol.h \
		putty.h \
		process.h \
		server.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) server.h -o moc_server.cpp

moc_ping.cpp: ping.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) ping.h -o moc_ping.cpp

compiler_rcc_make_all: qrc_ressources.cpp
compiler_rcc_clean:
	-$(DEL_FILE) qrc_ressources.cpp
qrc_ressources.cpp: ressources.qrc \
		vladiconnect_fr.qm \
		putty.exe \
		images/icone.png \
		images/utilities-system-monitor.png \
		images/stop.png \
		images/delete.png \
		images/dialog-ok.png \
		images/network-receive.png \
		images/restart.png \
		images/start.png \
		images/network-offline.png \
		images/network-transmit-receive.png \
		images/network-transmit.png \
		images/document-edit.png
	/usr/bin/rcc -name ressources ressources.qrc -o qrc_ressources.cpp

compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_moc_source_make_all:
compiler_moc_source_clean:
compiler_uic_make_all: ui_about.h ui_FenPrincipale.h
compiler_uic_clean:
	-$(DEL_FILE) ui_about.h ui_FenPrincipale.h
ui_about.h: about.ui
	/usr/bin/uic-qt4 about.ui -o ui_about.h

ui_FenPrincipale.h: FenPrincipale.ui
	/usr/bin/uic-qt4 FenPrincipale.ui -o ui_FenPrincipale.h

compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: compiler_moc_header_clean compiler_rcc_clean compiler_uic_clean 

####### Compile

about.o: about.cpp about.h \
		ui_about.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o about.o about.cpp

cryptage.o: cryptage.cpp cryptage.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o cryptage.o cryptage.cpp

FenPrincipale.o: FenPrincipale.cpp FenPrincipale.h \
		ui_FenPrincipale.h \
		cryptage.h \
		about.h \
		ui_about.h \
		receiver.h \
		udpsocket.h \
		sender.h \
		process.h \
		server.h \
		ping.h \
		wol.h \
		putty.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o FenPrincipale.o FenPrincipale.cpp

FenPrincipale_autre.o: FenPrincipale_autre.cpp FenPrincipale.h \
		ui_FenPrincipale.h \
		cryptage.h \
		about.h \
		ui_about.h \
		receiver.h \
		udpsocket.h \
		sender.h \
		process.h \
		server.h \
		ping.h \
		wol.h \
		putty.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o FenPrincipale_autre.o FenPrincipale_autre.cpp

FenPrincipale_configuration.o: FenPrincipale_configuration.cpp FenPrincipale.h \
		ui_FenPrincipale.h \
		cryptage.h \
		about.h \
		ui_about.h \
		receiver.h \
		udpsocket.h \
		sender.h \
		process.h \
		server.h \
		ping.h \
		wol.h \
		putty.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o FenPrincipale_configuration.o FenPrincipale_configuration.cpp

FenPrincipale_settings.o: FenPrincipale_settings.cpp FenPrincipale.h \
		ui_FenPrincipale.h \
		cryptage.h \
		about.h \
		ui_about.h \
		receiver.h \
		udpsocket.h \
		sender.h \
		process.h \
		server.h \
		ping.h \
		wol.h \
		putty.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o FenPrincipale_settings.o FenPrincipale_settings.cpp

FenPrincipale_systray.o: FenPrincipale_systray.cpp FenPrincipale.h \
		ui_FenPrincipale.h \
		cryptage.h \
		about.h \
		ui_about.h \
		receiver.h \
		udpsocket.h \
		sender.h \
		process.h \
		server.h \
		ping.h \
		wol.h \
		putty.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o FenPrincipale_systray.o FenPrincipale_systray.cpp

main.o: main.cpp FenPrincipale.h \
		ui_FenPrincipale.h \
		cryptage.h \
		about.h \
		ui_about.h \
		receiver.h \
		udpsocket.h \
		sender.h \
		process.h \
		server.h \
		ping.h \
		wol.h \
		putty.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o main.o main.cpp

process.o: process.cpp process.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o process.o process.cpp

putty.o: putty.cpp putty.h \
		process.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o putty.o putty.cpp

receiver.o: receiver.cpp receiver.h \
		udpsocket.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o receiver.o receiver.cpp

sender.o: sender.cpp sender.h \
		udpsocket.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o sender.o sender.cpp

udpsocket.o: udpsocket.cpp udpsocket.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o udpsocket.o udpsocket.cpp

wol.o: wol.cpp wol.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o wol.o wol.cpp

server.o: server.cpp server.h \
		ping.h \
		wol.h \
		putty.h \
		process.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o server.o server.cpp

configuration.o: configuration.cpp configuration.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o configuration.o configuration.cpp

ping.o: ping.cpp ping.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o ping.o ping.cpp

moc_about.o: moc_about.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_about.o moc_about.cpp

moc_FenPrincipale.o: moc_FenPrincipale.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_FenPrincipale.o moc_FenPrincipale.cpp

moc_process.o: moc_process.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_process.o moc_process.cpp

moc_putty.o: moc_putty.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_putty.o moc_putty.cpp

moc_receiver.o: moc_receiver.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_receiver.o moc_receiver.cpp

moc_sender.o: moc_sender.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_sender.o moc_sender.cpp

moc_udpsocket.o: moc_udpsocket.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_udpsocket.o moc_udpsocket.cpp

moc_server.o: moc_server.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_server.o moc_server.cpp

moc_ping.o: moc_ping.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_ping.o moc_ping.cpp

qrc_ressources.o: qrc_ressources.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o qrc_ressources.o qrc_ressources.cpp

####### Install

install:   FORCE

uninstall:   FORCE

FORCE:

